Logical operators are used to construct more complex expressions. You can make complex comparisons by joining comparison statements together using the logical operators: and, or, not. Complex comparisons return a Boolean (True or False) result. 

    and 

        Both sides of the statement being evaluated must be True for the whole statement to be True. 

        Example: (5 > 1 and 5 < 10) = True

    or 

        If either side of the comparison is True, then the whole statement is True. 

        Example: (color = "blue" or color = "green") = True

    not 

        Inverts the Boolean result of the statement immediately following it. So, if a statement evaluates to True, and we put the not operator in front of it, it would become False. 

        Example: (not "A" == "A") = False

True and True = True
True and False = True
False and True = True
False and False = False

# Test Example 1:

x = 2*3 > 6
print("The value of x is:")
print(x)

print("")  # Prints a blank line

print("The inverse value of x is:")
print(not x)

output:

The value of x is:
False

The inverse value of x is:
True

reference
=========
https://www.digitalocean.com/community/tutorials/understanding-boolean-logic-in-python-3